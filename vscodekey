// 将键绑定放在此文件中以覆盖默认值
[
  {
    "command": "workbench.action.toggleSidebarVisibility",
    "key": "ctrl+e"
  },
  {
    "command": "workbench.files.action.focusFilesExplorer",
    "key": "ctrl+e",
    "when": "editorTextFocus"
  },
  {
    "command": "workbench.action.toggleActivityBarVisibility",
    "key": "ctrl+q"
  },
  {
    "command": "explorer.newFile",
    "key": "a",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "renameFile",
    "key": "r",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "explorer.newFolder",
    "key": "f",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "command": "workbench.action.showCommands",
    "key": "ctrl+g c"
  },
  // 打开设置页面
  {
    "command": "workbench.action.openSettings",
    "key": "ctrl+g s"
  },
  // 打开热键映射
  {
    "command": "workbench.action.openGlobalKeybindings",
    "key": "ctrl+g k"
  },
  // 打开一个目录
  {
    "command": "workbench.action.files.openFolder",
    "key": "ctrl+g f"
  },
  // 打开最近记录
  {
    "command": "workbench.action.openRecent",
    "key": "ctrl+1"
  },
  {
    "command": "workbench.action.toggleZenMode",
    "key": "ctrl+g z"

  },
  {
    "command": "-vscode-neovim.escape",
    "key": "ctrl+c",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.c && neovim.init && !dirtyDiffVisible && !findWidgetVisible && !inReferenceSearchEditor && !markersNavigationVisible && !notebookCellFocused && !notificationCenterVisible && !parameterHintsVisible && !referenceSearchVisible && neovim.mode == 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "command": "-vscode-neovim.escape",
    "key": "ctrl+c",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.c && neovim.init && neovim.mode != 'normal' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+v",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysNormal.v && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+v",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.ctrlKeysInsert.v && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
  },
  {
    "key": "ctrl+v",
    "command": "-vscode-neovim.send",
    "when": "editorTextFocus && neovim.init && focusedView == 'workbench.panel.output' && neovim.mode != 'insert'"
  },
  {
    "key": "f7",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f11",
    "command": "-workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f6",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f10",
    "command": "-workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f8",
    "command": "workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+f11",
    "command": "-workbench.action.debug.stepOut",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "f4",
    "command": "workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+shift+f5",
    "command": "-workbench.action.debug.restart",
    "when": "inDebugMode"
  },
  {
    "key": "alt+e",
    "command": "editor.debug.action.selectionToRepl"
  },
  {
    "key": "f5",
    "command": "workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "ctrl+f5",
    "command": "-workbench.action.debug.run",
    "when": "debuggersAvailable && debugState != 'initializing'"
  },
  {
    "key": "f3",
    "command": "editor.debug.action.runToCursor"
  },
  {
    "key": "ctrl+shift+y",
    "command": "-workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+a",
    "command": "editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "ctrl+k ctrl+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "f4",
    "command": "workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "f5",
    "command": "-workbench.action.debug.start",
    "when": "debuggersAvailable && debugState == 'inactive'"
  },
  {
    "key": "meta+r",
    "command": "python.execInTerminal-icon"
  },
  {
    "key": "ctrl+shift+/",
    "command": "notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+end",
    "command": "-notebook.focusBottom",
    "when": "notebookEditorFocused && !inputFocus"
  },
  {
    "key": "ctrl+x",
    "command": "workbench.action.focusActiveEditorGroup"
    
  },
  {
    "key": "ctrl+z",
    "command": "workbench.debug.action.toggleRepl",
    "when": "workbench.panel.repl.view.active"
  },
  {
    "key": "ctrl+m",
    "command": "workbench.action.terminal.focus",
  
  },
  {
    "key": "ctrl+down",
    "command": "-workbench.action.terminal.focus",
    "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
  },
  // 移动到下一个建议
  {
    "key": "ctrl+j",
    "command": "editor.action.marker.next",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
},
// 移动到上一个建议
{
    "key": "ctrl+k",
    "command": "editor.action.marker.prev",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
}, 
{
    "key": "ctrl+shift+0",
    "command": "debug.addToWatchExpressions"
  },
  {
    "key": "ctrl+a",
    "command": "debug.jumpToCursor"
  },
  {
    "key": "ctrl+t",
    "command": "workbench.debug.viewlet.action.addWatchExpression"
  },
  {
    "key": "f12",
    "command": "-editor.gotoNextSymbolFromResult",
    "when": "hasSymbols"
  },
  {
    "key": "ctrl+shift+-",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.action.findInFiles"
  },
  {
    "key": "ctrl+alt+0",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "args": "<C-n>",
    "command": "vscode-neovim.send",
    "key": "ctrl+n",
    "when": "editorFocus && neovim.init"
  },
  {
    "key": "ctrl+shift+f8",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+f8",
    "command": "-editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "ctrl+r",
    "command": "-workbench.action.openRecent"
  },
  {
    "key": "ctrl+w w",
    "command": "svifpd.view-image",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+alt+q",
    "command": "-svifpd.view-image",
    "when": "inDebugMode"
  },
  {
    "key": "ctrl+right",
    "command": "workbench.action.increaseViewWidth"
  },
  {
    "key": "ctrl+left",
    "command": "workbench.action.decreaseViewWidth"
  },
  {
    "key": "ctrl+up",
    "command": "workbench.action.increaseViewHeight"
  },
  {
    "key": "ctrl+down",
    "command": "workbench.action.decreaseViewHeight",
    "when": "!editorTextFocus && !isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+w -",
    "command": "-workbench.action.decreaseViewHeight",
    "when": "!editorTextFocus && !isAuxiliaryWindowFocusedContext && !terminalFocus && neovim.mode != 'cmdline'"
  },
  {
    "key": "ctrl+pagedown",
    "command": "workbench.action.decreaseViewSize"
  },
  {
    "key": "ctrl+pageup",
    "command": "workbench.action.increaseViewSize"
  },
  {
    "key": "ctrl+shift+f",
    "command": "workbench.view.search"
  },
  {
    "key": "ctrl+shift+f",
    "command": "-workbench.view.search",
    "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
  },
  {
    "key": "ctrl+alt+l",
    "command": "-bookmarks.jumpToNext",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+j",
    "command": "-bookmarks.jumpToPrevious",
    "when": "editorTextFocus"
  },
  {
    "key": "ctrl+alt+l",
    "command": "bookmarks.list"
  },
  {
    "key": "ctrl+alt+j",
    "command": "bookmarks.listFromAllFiles"
  }
]
